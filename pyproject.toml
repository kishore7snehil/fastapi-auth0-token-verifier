[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-auth0-token-verifier"
version = "1.0.0"
description = "A comprehensive demonstration of JWT and DPoP token verification using Auth0 with FastAPI"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Auth0 Community", email = "community@auth0.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]
keywords = ["auth0", "jwt", "fastapi", "authentication", "authorization", "dpop", "token-verification", "oauth2"]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0", 
    "auth0-api-python>=1.0.0b3",
    "httpx>=0.28.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.30.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/your-username/fastapi-auth0-token-verifier"
Documentation = "https://github.com/your-username/fastapi-auth0-token-verifier#readme"
Repository = "https://github.com/your-username/fastapi-auth0-token-verifier"
Issues = "https://github.com/your-username/fastapi-auth0-token-verifier/issues"

[project.scripts]
fastapi-auth0-demo = "app:app"

[tool.ruff]
target-version = "py39"
line-length = 100
select = ["E", "F", "W", "I", "N", "B", "S", "A", "C4", "T20"]
ignore = ["S101", "S603", "S607"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
markers = [
    "asyncio: mark test as async",
    "integration: mark test as integration test",
]
